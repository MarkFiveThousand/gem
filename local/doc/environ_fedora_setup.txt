# =============================================================================
# To Do:
# =============================================================================
What is the default path for linux?  In the instructions for setting/getting
the selinux state, the commands are in the /usr/sbin folder.  That is not in my
path.  The online documentation shows calling the commands including the path.
Should we add /usr/sbin to our path?  Is it already there?  In gem_bash_init,
where we set the path, we should document the default Fedora path.  Update the
selinux appendix as appropriate.


# =============================================================================
# Overview:
# =============================================================================
#
# Fedora Linux is an advanced development branch of Red Hat Enterprise Linux,
# used commercially.  Red Hat first releases leading edge packages into the
# Fedora development line, then later merges them into Red Hat Enterprise
# Linux.  Fedora is deemed stable.  Beta releases of Fedora, containing the
# newest beta package releases, are also available.  We're sticking with the
# latest stable release of Fedora in this guide.
#
# This guide covers installing Fedora Linux, LXQt Edition.  LXQt Edition is
# geared towards low resource PCs.  We're favoring it for it's light weight and
# speed.  A wise man once told me, a good operating system should get out of
# your way and let you get your work done.  Other variations of Fedora, called
# "spins", are also available at https://spins.fedoraproject.org.


# Official Fedora Documentation:
# ------------------------------
# The official documentation appears to be undergoing changes.  The document
# linked to below is incomplete.
#
# https://docs.fedoraproject.org/en-US/fedora/f30/
#
# More complete documentation can be found at the Fedora wiki link below.  Enter
# terms related to what you're looking for.  Pay attention to the dates on
# articles.  Much old material is present-- some still relevant, some not.
#
# https://fedoraproject.org/wiki/Special:Categories


# Using this Document:
# --------------------
# NOTE: Some parts of this document are old, and may refer to commands that are
# now deprecated, though hopefully these have all been removed or update.
#
# Throughout this document lists of commands are listed.  They may be copied
# from this document by selecting the text, copying using ctrl-c, then pasting
# into a command terminal by middle-clicking in the terminal window.  Double-
# clicking on text selects a block of text delineated by spaces.
#
# Many commands are prefaced with "sudo".  Sudo is short for "super user do".
# Super user is a user with administrator rights, typically a user named
# "root".  We'll give our user the right to execute a subset of commands as
# administrator by adding our user to the /etc/sudoers file.
#
# A user may also execute commands as administer by temporarily assuming the
# identiy of root user by entering the "su" command, pressing Enter, followed
# by entering the administrator password.  The command "exit" will return the
# user to their own identity.  Wherever you see "su" within a block of
# commands, you must enter root's password from the keyboard before proceeding
# with the commands that follow.


# Linux Commands:
# ---------------
# It is expected readers of this document will take it upon themselves to learn
# linux commands on their own, as instruction of such is beyond the scope of
# this document.  It is recommended that readers new to Linux keep a
# reference handy for looking up commands as needed:
#
# https://www.google.com/search?q=linux+beginner+command+reference




# =============================================================================
# Contents:
# =============================================================================
#
# Begin the Installation
# Preparing Boot Media
# Download Fedora Linux
# Create a Virtual Machine
# Install Fedora Linux
# Install VirtualBox Guest Additions
# Terminal Settings
# File Manager Settings
# Set Hostname
# LXQt Appearance
# Customize the Window Border
# Customize Desktop and Login Backgrounds
# Change the Login Screen Background
# Change the Bootup Theme (Animation)
# Sudo
# Install Packages
# Change LXQt Clock Time Display to 12 hour rather than 24 hour
# Configure RXVT Terminal
# Add Quick Links to Panel
# File Associations
# Remove Unwanted Applications and Directories
# Autostart
# Install Audio & Video Codecs
# Install & Configure Oracle Java
# Configure Git Revision Control
# Download Gem
#
# Appendix A: Repositories
# Appendix B: Grouplists
# Appendix C: Firewall Notes
# Appendix D: SELinux Notes
# Appendix E: Back Up Files
# Appendix F: Creating a Disk Partion
# Appendix G: Disk Usage Notes
# Appendix H: Group List




# =============================================================================
# Begin the Installation
# =============================================================================
#
# NOTE: The official documentation of the Fedora download and installation
# process can be found at:
# https://docs.fedoraproject.org/en-US/fedora/f30/install-guide/
# You should skim through it to make yourself aware of the more detailed
# instructions available.


# To install Fedora Linux in a virtual machine running inside of Windows
# continue to the section below titled "Download Fedora Linux, LXQt Edition"
#
# To install Fedora as the primary operating system, rather than a virtual
# machine, continue to the section below titled "Preparing Boot Media"



# =============================================================================
# Preparing Boot Media
# =============================================================================
#
# Use Fedora's Media Writer, as documented at:
# https://docs.fedoraproject.org/en-US/fedora/f30/install-guide/
#
# Proceed to the section of this document titled, Install Fedora Linux.



# =============================================================================
# Download Fedora Linux
# =============================================================================

# Navigate to https://spins.fedoraproject.org/en/lxqt/.
#
# Scroll down and click "Download Now."  At the next page, click "Download."
# Your download will begin.  No need to worry about verifying the download.
# That will be done much more easily during the install process.  We will
# install Fedora after we create a virtual machine.




# =============================================================================
# Create a Virtual Machine
# =============================================================================
# VirtualBox, made by Oracle, allows various operating systems to run
# concurrently within other operating systems using virtualization.  We're
# going to use it to run Fedora Linux inside of Windows.
#
# Download and install VirtualBox for Windows Hosts from:
# https://www.virtualbox.org/wiki/Downloads
#
# After installing it, pin a shortcut to
# C:\Program Files\Oracle\VirtualBox\VirtualBox.exe to the Windows taskbar.
#
# Launch C:\Program Files\Oracle\VirtualBox\VirtualBox.exe, Oracle VM
# VirtualBox Manager using the pinned shortcut.
#
# At any time during this process, you may select the "Guided Mode" button at
# the bottom for further information about the selections we will be making.
# The steps we are currently following walk you through "Expert Mode".
#
# Click "New" to create a new virtual machine.  Assign it a name.  I use "f30v1"
# for Fedora 30 version 1.  I often will create more than one version for
# experimental purposes.  Choose a name to your liking.
#
# Note the Machine Folder field.  This is where your virtual machine files are
# stored on your local hard drive.  Among these files is your virtual hard
# drive, a .vdi file.
#
# Choose Type: Linux
#
# Choose Version: Fedora (64-bit)
#
# Choose a memory size that is in the green region.  I choose half of my actual
# system memory size.  Memory handed over to your virtual machine while it is
# running will become unavailable to Windows.  Giving too much memory to your
# virtual machine will cause Windows to perform very poorly.  The amount of
# memory allocated can be easily changed later.
#
# Under "Hard disk file type", leave "Create a virtual hard disk now" selected.
# Under "Storage on physical hard disk", leave "Dynamically allocated"
# selected.  This permits the virtual hard disk to grow up to the selected
# size.  It will begin at a minimal size.  As of Oct. 2019, I specified a
# 300 GB hard drive, but the actual starting size is about 300 MB.
#
# Click "Create."
#
# In the "Create Virtual Hard Disk" dialog box, choose a hard drive size.



# Now your virtual machine is ready to be run.  The name of your new virtual
# machine should be shown in the left panel in Oracle VM VirtualBox Manager.
# Select it then click "Start", on the menu bar at the top.
#
# Upon first launch, you may see the "Select start-up disk" dialog box with the
# following text:
#
# "Please select a virtual optical disk file or a physical optical drive
# containing a disk to start your new virtual machine from.
#
# The disk should be suitable for starting a computer from and should contain
# the operating system you with to install on the virtual machine if you want
# to do that now.  The disk will be ejected from the virtual drive
# automatically next time you switch the virtual machine off, but you can also
# do this yourself if needed using the Devices menu."

# Click "Cancel."
#
# The start up screen will show for a couple seconds displaying the message
# "Press F12 to select boot device."  If you take no action, the message,
# "FATAL: No bootable medium found! System halted."  Press F12 before the start
# up screen disappears.  You get about 2 seconds!
#
# Close the Oracle VM Virtual Box" window.  A "Close Virtual Machine" dialog
# box will be displayed.  Select "Power off the machine", then "OK."  A virtual
# machine's entire internal state can be saved at any time.  This includes the
# complete state of memory and the hard drive.  This can consume a lot of hard
# disk space, but can be useful if you need to restore your machine to an
# earlier state.  Doing so is beyond the scope of this lesson, and is certainly
# not applicable, at this point.  Keep in mind, once we get the operating
# system installed we should always prefer to perform a proper operating system
# shutdown, and never kill VirtualBox by simply closing the window.  To do so,
# is like unplugging your computer while it's running and can corrupt the hard
# drive.  As we are not yet running an operating system, it is safe to simply
# power down the virtual machine, at this point.
#
# We will install the Fedora Linux operating system in a moment.  First, we
# need to change some settings for our virtual machine.  In "Oracle VM
# VirtualBox Manager", with our new virtual machine selected in the left panel,
# click "Settings" on the tool bar at the top.
#
# In the left panel, select "General".  In the right panel, click the
# "Advanced" tab.  Change "Shared Clipboard" to "Bidirectional".  Change
# "Drag'n'Drop" to "Bidirectional"  We will later install what are called
# "VirtualBox Guest Additions" to allow deep integration of the Fedora Linux
# operating system within Windows.  These integration settings will not be
# available until we complete the installation of Guest Additions.
#
# In the left panel, select "System".  In the right panel, click "Processor."
# Notice how many processors will be allocated for the virtual machine.  The
# number available will depend on the number of cores available in the
# processor running in your actual machine.  Select a value in the green area,
# keeping in mind, like system RAM, these resources will be exclusively
# available to the virtual machine, and therefore, not to Windows.  As such,
# allocating too many processors to the virtual machine may adversely affect
# the performance of your Windows machine.  This setting, like RAM, can be
# changed at any point while the virtual machine is powered down.
#
# In the left panel, select "Display".  In the right panel, click "Screen."
# Next to "Acceleration", check "Enable 3D Acceleration."  It is not yet clear
# that this will work well.
#
# In the left panel, select "Storage".  In the right panel, below "Controller:
# IDE", Click "Empty."  This is how we insert a CD image (.iso file) into the
# virtual machine's CD/DVD drive.  Click the blue circular icon to the right of
# "IDE Secondary Master."  Select "Choose Virtual Optical Disk File."  Navigate
# to, and select, your downloaded .iso file.  Check "Live CD/DVD."
#
# In the left panel, select "Network".  In the right panel, change "Attached
# to:" to "Bridged Adapter."  Verify "Name:" refers to your network device that
# you would like to use to connect to your network.  Note that if your PC
# connects to the internet via wifi, it is expected that your virtual machine
# will show as using a wired connection.
#
# In the left panel, select "USB".  In the right panel, select USB 3.0.
# Under "USB Device Filters", click the second rightmost blue icon (the one
# with the green plus).  If you have any USB devices that you would like to be
# visible to Fedora (other than your keyboard or mouse), select them.




# =============================================================================
# *FIX: Move this section into gem\local\doc\environ_network.txt.
# =============================================================================
#
# We're going to notify Oracle VirtualBox VM Manager of which Windows folders
# we would like to share with Fedora. If, at this point, you're not sure which
# folders to share, that's fine.  You don't need to share any folders at this
# time.  You can skip this section. We can share folders at any point in the
# future.
#
# Open settings for your virtual machine in Oracle VirtualBox VM Manager.  In
# the left panel, select "Shared Folders".  In the right panel, click the
# blue folder icon (the one with the green plus).  Under "Folder Path:", select
# "Other..."  Select a folder that you would like to make available/share with
# Fedora.
#
# As I have multiple development environments available (i.e. windows, fedora,
# msys, & cygwin), I share my user folder for each, along with the root of my
# C:\ drive.  I create the following shared folders:
#
# In this section, you'll need to know the host name of your Windows pc.  To
# find out what your pc's host name is, open a Windows command prompt by
# entering the following into the search box below the Windows start menu,
# "cmd".  When the command terminal opens, enter the "hostname" command.  My
# host name is "mars".  Anywhere you see "mars" in the below commands, you'll
# need to replace with your own pc's host name.
#

# Folder Path: C:\
# Folder Name: mars_root
# Mount point: /home/mhodges/gem/home/mhodges/mnt/mars_root
#
# Folder Path: C:\cygwin64\home\mhodges
# Folder Name: mars_cygwin_mhodges
# Mount point: /home/mhodges/gem/home/mhodges/mnt/mars_cygwin_mhodges
#
# Folder Path: C:\msys64\home\mhodges
# Folder Name: mars_msys64_mhodges
# Mount point: /home/mhodges/gem/home/mhodges/mnt/mars_msys64_mhodges
#
# Note: These folders will not be available until we later install Guest
# Additions.
#
# Click "OK."

# Now your virtual machine is configured with the Fedora installation .iso
# file (disk) inserted into the virtual optical drive.  We're ready boot the
# virtual machine and install Fedora.  With your virtual machine selected in
# the left panel, click "Start" on the menu bar at the top.





# =============================================================================
# Install Fedora Linux
# =============================================================================
#
# Note: A fresh install of Linux in VirtualBox feels a little cramped running
# in a small window.  After we install, then update the operating system, we
# will make the Linux desktop resizable along with the VirtualBox window, among
# several other improvements.
#
# Boot from the installation .iso file (disk).  You may have to press f12 to
# change the boot device to CD/DVD.  You should see a short menu with an option
# to "Test this media & start Fedora-LXQt-Live 30"  Press enter to test the
# media and run the installer.
# 
#  1.) When the desktop shows up, double-click the "Install to Hard Drive"
#      icon.  A message box will appear displaying the message, "This file
#      'Install to Hard Drive' seems to be a desktop entry.  What do you want
#      to do with it?"  Click Execute.
# 
#  2.) Continue through the English Language menu.
# 
#  3.) Click "Time & Date."  Verify the Time & Date are set correctly for your
#      time zone.  Click "Done."
#
#  4.) Click on "Installation Destination."
# 
#  5.) Near the bottom of the Installation Destination screen, under "Storage
#      Configuration", select Custom, then click Done at the top.
#
#  6.) If you previously had Fedora installed, select all previous Fedora
#      partitions, then delete (-) button at the bottom.  This won't apply to
#      most people.
# 
#  7.) Click the "Click here to create them automatically" link near the top.
#      The hard disk, currently named "fedora_localhost-live" has been divided
#      into 3 sections called volumes named "fedora_localhost-live-home" (where
#      your files will exist), "fedora_localhost-live-root" (where the
#      operating system will be installed), and "fedora_localhost-live-swap" (a
#      work space used by the operating system). Sda1 is the internal name of
#      the virtual optical/CD drive.
#
#  8.) The "fedora_localhost-live" prefix is too long, so we are going to
#      shorten it to just "fedora."  Click on "fedora_localhost-live-root."  To
#      the right, under "Volume Group", click "Modify" and rename it to simply
#      "fedora". Click Save.  Our 3 volumes are now named "fedora-home",
#      "fedora-root", and "fedora-swap."
#
# NOTE: The storage sizes I'm using below assume you created the same size
# virtual hard disk that I did.  Your numbers may be different.  In addition,
# if you just want to play around with Linux, you don't need to change the size
# of volumes, as describe below.
#
# *FIX: Is the 8-9 figure still correct?
#
#  9.) In the left pane, click "fedora-root."  In the right pane, under
#      "Desired Capacity", change the fedora-root volume size from "70 GiB",
#      or whatever yours is, to "20 GiB".  This will leave about 8-9 GB to
#      install packages beyond the bare minimum.
#
# 10.) In the left pane, click "fedora-home". Notice, whatever space you made
#      available by shrinking the fedora-root volume, will show up as
#      available in the pink box titled "AVAILABLE SPACE".  Mine shows 50 GiB
#      because I shrunk my fedora-root partition from 70 GiB to 20 GiB.
#
#      In the right pane, under "Desired Capacity", increase the size to
#      consume the space we made available when we shrank the fedora-root
#      partition.  After changing the "Desired Capacity", click another partion
#      (e.g. fedora-root), then back to fedora-home to update "AVAILABLE
#      SPACE."  I was able to grow my fedora-home to 271.08 GiB.  Allocate as
#      much "AVAILABLE SPACE" to fedora-home as you can.  I had 1023 KiB
#      remaining that I was unable to allocate to any partition.  Click the
#      "Done" button at the upper left.
#
# 11.) In the "Summary of Changes" dialog box, click "Accept Changes."  You
#      will be returned to the "Installation Summary" screen.  Click "Begin
#      Installation".
# 
# 12.) While installing, in the "Configuration" screen, click "Root Password."
#      Set a root password, then click "Done."  You will be returned to the
#      "Configuration" screen.
#
# 13.) In the "Configuration" screen, click "User Creation".  Enter your first
#      and last name.  A user name will be generated.  You may change it, if
#      you prefer to have a different user name.  Do not check "Make this user
#      administrator."  After entering a password, click "Done."
#
# 14.) After returning to the "Configuration" screen, click "Finish
#      Configuration."  When configuration is complete, click "Quit."  To
#      shutdown Fedora click the blue icon in the lower left corner of the
#      desktop.  This is the equivalent of the Windows start menu.  Click
#      "Leave", then "Shutdown."  Click "Yes" to agree to shutdown.  We'll use
#      the following notation to indicate this, and similar, menu selections:
#      Fedora->Leave->Shutdown.
#
# 15.) Before we reboot, we need to remove the installation .iso (disk) in the
#      virtual machine's optical drive.  Return to Oracle VM VirtualBox
#      Manager.  In the left pane, select your virtual machine.  Click the
#      "Settings" button on the top.
#
# 16.) In the left pane of the settings menu, click "Storage." In the right
#      pane, under "Storage Devices" and "Controller: IDE", click
#      "Fedora-LXQt-Live-x86_64-30-1.2.iso", or your similar .iso file name.
#
# 17.) To the far right, under "Attributes" and to the right of "Optical
#      Drive:", click the blue disk icon, then click "Remove Disk from Virtual
#      Drive."  Click "OK."
#
# 18.) Start your virtual machine. Log in.

# NOTE: Fedora is connecting to the network via a virtual "wired connection".
# However, it is using the host's connection, which may or may not be wired.
# In any event, Fedora should obtain an internet connection through your host
# pc.

# 19.) We are going to be cutting and pasting commands from this document to
#      the terminal running in Fedora.  That means we will want a copy of this
#      document in Fedora.  Use the web browser (which we will change later)
#      Fedora->Internet->Falkon to email a copy of this file to yourself.
#
# 20.) Many updates have likely been released since the downloaded .iso
#      installation disk was created, so we'll now update the OS.  Open a
#      command prompt terminal window.  Go to Fedora->System Tools->QTerminal.
#      Enter the "su" command below to become super user (i.e. root/
#      administrator), followed by root's password.

su
# Enter root/administrator password.


# After we update the operating system, we are going to install VirtualBox
# Guest Additions.  Guest Additions will allow tighter integration between the
# Windows and Linux operating systems.  That will enable us to share files,
# copy and paste between Windows and Linux applications, and make the Linux
# desktop resize along with the VirtualBox window.  Until that is done, you'll
# have to either type in the below commands, or else email this document to
# yourself on Linux so you can copy and paste them into the terminal.  I do the
# latter.  To open the default web browser in Linux go to:
# Fedora->Internet->Falkon.  We will install Google Chrome, and/or Firefox
# shortly.

dnf -y update
dnf -y update kernel*
dnf -y install kernel-devel* elfutils-libelf-devel

# Restart Fedora:
#
# Fedora->Leave->Reboot





# How much hard drive space is being used?  Let's find out.  Open a terminal
# and enter the below command:

Fedora->System Tools->QTerminal

df

# I get the below output (I made a 300 GB virtual hard drive):
#
# Filesystem              1K-blocks    Used Available Use% Mounted on
# devtmpfs                  2003088       0   2003088   0% /dev
# tmpfs                     2018652       0   2018652   0% /dev/shm
# tmpfs                     2018652    1008   2017644   1% /run
# tmpfs                     2018652       0   2018652   0% /sys/fs/cgroup
# /dev/mapper/fedora-root  20511312 5452948  13993404  29% /
# tmpfs                     2018652      20   2018632   1% /tmp
# /dev/sda1                  999320  189348    741160  21% /boot
# /dev/mapper/fedora-home 282802744  112384 268255032   1% /home
# tmpfs                      403728      12    403716   1% /run/user/1000
#
# The entries of interest are:
#
# /dev/mapper/fedora-root      This is where the operating system and installed
#                              applications are stored.
#
# /dev/mapper/fedora-home      This is our personal hard drive space.  As
#                              software we create and files we store are kept
#                              here, we have allocated the greatest amount of
#                              space here.
#
# We selected a virtual hard drive (.vdi file) that will dynamically grow up to
# the maximum size we specified when we create the virtual machine.  Currently,
# Linux reports we have used a total of 5,755,708 1K-blocks, or 5 GB.  That's a
# small footprint for a modern operating system with minimal applications
# installed.
#
# Now let's see how much space Windows says we're using.  In Windows, navigate
# to: C:\Users\<Windows user name>\VirtualBox VMs\<your virtualbox machine name>
#
# Mine is here:
#
# C:\Users\mhodges\VirtualBox VMs\f30v1
#
# Windows shows our virtual hard drive (mine: f30v1.vdi) is actually occupying
# 8 GB in Windows.  Note: If you want to back up your virtual machine's hard
# drive, this is the file to store.
#
# Next, we're going to make the virtual machine a more comfortable place to
# work.



# =============================================================================
# Install VirtualBox Guest Additions
# =============================================================================
# Source: https://www.virtualbox.org/manual/ch04.html#guestadd-intro
#
# VirtualBox Guest Additions allow tighter integration between the Windows and
# Linux operating systems.  This will enable us to share files, copy and paste
# between Windows and Linux applications, and make the Linux desktop resize
# along with the VirtualBox window and more.  See the link above for more
# details.
#
#  1.) The beauty of an open source operating system is we are going to run a
#      script that will compile the changes into the Fedora operating system
#      kernel.
#
#      Click on "Devices" on the Oracle VM VirtualBox menu bar at the very top.
#      At the bottom of the menu, select "Insert Guest Additions CD image..."
#      The virtual CD is now inserted in the virtual CD drive.  When the
#      "Removable medium is inserted" dialog appears, click "Open in file
#      manager", then click "OK."  The file manager (Fedora->Accessories->
#      PCMandFM-Qt File Manager) will open.
#
#      If you have previously inserted the Guest Additions CD and you need to
#      launch the installation script again, find on the bar at the bottom-
#      right of the Fedora desktop a button to the left of the volume icon.
#      Hover the mouse over it to display the message "Removable media/ devices
#      manager."  Left-clicking it displays a message similar to
#      "VBox_GA_6.0.12."  Click the message to open the Guest Additions CD
#      again.
#
#  2.) Find and double click autorun.sh.  When the "Execute file" dialog
#      appears, click "Execute in Terminal"  Enter root administrator's
#      password.  NOTE: The terminal window that opens is ugly, and will be
#      replaced shortly.
#
#      ALTERNATIVELY: If you are updating guest additions, the shell may not
#      execute properly.  I may not have changed the terminal program within
#      the os properly.  I need to look into that.  That's okay.  Do the
#      following:
#
#      a.) Open a terminal
#      b.) Become super user: su
#      c.) cd /run/media/$USER
#      d.) cd into the guest additions directory.  It's named something similar
#          to: VBox_GAs_6.0.14   You can type "VBox_GAs_" then press tab to
#          complete the file name.
#      e.) Run: ./VBoxLinuxAdditions.run
#
#      When the kernel has been rebuilt, complete the installation by pressing
#      enter to close the terminal.  Close all currently running applications
#      and restart to run the new kernel.
#
#      Fedora->Leave->Reboot

# After logging in, verify Guest Additions are working by resizing the window.
# The desktop should resize accordingly.
#
#  3.) On the bar at the bottom-right of the Fedora desktop there's a button to
#      the left of the volume icon.  Hover the mouse over it to display the
#      message "Removable media/devices manager."  Left-clicking it displays
#      a message similar to "VBox_GA_6.0.12."  To the right is the eject
#      triangle.  Click the triangle to eject the Guest Additions CD.
#
# Next, we will continue to make the linux environment more comfortable.


# =============================================================================
# Terminal Settings
# =============================================================================
# We're going to change the colors in the terminal window.  Open a terminal
# window:
#
# Fedora->System Tools->QTerminal
#
# Copy and paste the following in the terminal window:

cat << EOF >> ~/.bashrc

function gem_colors()
{
    alias ls='ls -al --color=auto'
    alias code='/usr/bin/code --user-data-dir=${HOME}/.config/Code/'
    export LS_COLORS="rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=01;05;37;41:su=37;41:sg=30;43:ca=30;41:tw=3;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*xz=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.jpg=01;35:*.jpeg=01;35:*.gif=01;35:*.bmp=1;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.axv=01;35:*.anx=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=01;36:*.au=01;36:*.flac=01;36:*.mid=01;36:*.midi=01;36:*.mka=01;36:*.mp3=01;36:*.mpc=01;36:*.ogg=01;36:*.ra=01;36:*.wav=01;36:*.axa=01;36:*.oga=1;36:*.spx=01;36:*.xspf=01;36:"
    export PS1="\[\$(tput bold)\]\[\$(tput setaf 1)\][\[\$(tput setaf 3)\]\u\[\$(tput setaf 2)\]@\[\$(tput setaf 4)\]\h \[\$(tput setaf 5)\]\W\[\$(tput setaf 1)\]]\[\$(tput setaf 7)\]\\\$ \[\$(tput sgr0)\]"
}
gem_colors  # Call it.
EOF


# Define it again for root.  This is most important for VSCode to run with
# --user-data-dir defined for root.

su

# Paste the above commands again, for root.

# Return to your user identity.
exit



# =============================================================================
# File Manager Settings
# =============================================================================
# Open the file manager from the Fedora start menu.
#
# Fedora->Accessories->PCManFM-Qt File Manager
#
# In the left panel, change "Places" to "Directory tree."
#
# Change to file detail view: Edit->Preferences
#
# In the left pane, click Behavior.  In the right pane, under Browsing change
# "Default view mode:" from "Icon View" to "Detailed List View."
#
# In the left pane, click Advanced.  In the right pane, set Terminal emulator:
# urxvt 
#
# NOTE: We haven't installed urxvt terminal program yet, but we're going to.
#
# Click Ok.
#
# Close PCManFM-Qt File Manager




# ================================================================================= 
# Set Hostname
# ================================================================================= 
#
# Set gem_fedora_hostname to your desired name for your system.  I have multiple
# installations, so chose f30v4 for my 4th installation of Fedora 30.

gem_fedora_hostname=f30v4

# In /etc/hostname replace localhost.localdomain with ${gem_hostname}.localdomain.
# 
# WARNING: Only run this once.
# 
# NOTE: The .localdomain suffix is required in the hostname file.  This makes
# it a fully qualified domain name (FQDM).  When it shows up in windows, it
# only shows the first portion.  If you leave off the .localdomain suffix Windows
# will not be able to see the linux machine on the network.

# To view your current hostname, run the hostname command.  The default
# hostname is localhost.localdomain.

hostname

su

gem_fedora_hostname=f30v4

if [[ ! -f /etc/hostname.backup ]]; then
	\cp -f /etc/hostname /etc/hostname.backup
fi
sed -i "s|localhost.localdomain|${gem_fedora_hostname}.localdomain|g" /etc/hostname
sed -i "s|f30v1.localdomain|${gem_fedora_hostname}.localdomain|g" /etc/hostname

# View the new contents of /etc/hostname:

cat /etc/hostname

# Reboot to make the change take effect.





# =============================================================================
# LXQt Appearance
# =============================================================================
# LXQt allows the appearance of font, icons, and colors to be changed.
#
# Open Fedora->Accessories->PCManFM-Qt File Manager so we can view the changes
# as we apply them.
#
# Open: Fedora->Preferences->Appearance.
#
# I like:
#     Widget Style->Qt Style: Fusion
#     Icons Theme: Fedora (Fedora Icon Theme)
#     LXQt Theme: Fedora-lxqt
#     Font->Point size: 10
#     Cursor->Breeze Snow
#
# Click "Apply."  Notice how the file manager appearance has changed.
#
# Close the "LXQT Appearance Configuration" window.


# Additional window settings are also available:
#
# Fedora->Preferences->LXQt settings->Openbox Settings.
#
# I like Theme->Clearlooks-3.4
#
# Select Desktops->Number of desktops: 1

# Click "Close."






# =============================================================================
# Customize the Window Border
# =============================================================================
# Source: http://openbox.org/wiki/Help:Themes
#         https://www.addictivetips.com/ubuntu-linux-tips/install-openbox-themes-on-linux/
#
# NOTE: To resize any window you can alt-right-click and drag.
# 
# I chose Theme->Clearlooks-3.4.  Change gem_name_theme, below, if you chose a
# different theme.
#
# Open a terminal window:
#
# Fedora->System Tools->QTerminal
#
# Paste the following commands into the terminal window:



gem_name_theme=Clearlooks-3.4

# Make a local copy of the theme for our user:
mkdir -p ~/.themes
gem_fullpath_theme_src=/usr/share/themes/${gem_name_theme}
cp -r ${gem_fullpath_theme_src} ~/.themes
cd ~/.themes/${gem_name_theme}/openbox-3
cp themerc themerc.bak




# Quick reset for editing:
gem_name_theme=Clearlooks-3.4
cd ~/.themes/${gem_name_theme}/openbox-3
cp themerc.bak themerc




# Border Widths
sed -i "s|border.width: 1|border.width: 6|g" themerc
sed -i "s|window.handle.width: 4|window.handle.width: 0|g" themerc

# Active Window
sed -i "s|border.color: #1f252b|border.color: #4f6577|g" themerc
sed -i "s|window.active.title.separator.color: #334c62|window.active.title.separator.color: #4f6577|g" themerc
sed -i "s|window.active.title.bg.colorTo: #3c7cb7|window.active.title.bg.colorTo: #1e3e5b|g" themerc
sed -i "s|window.active.title.bg.border.color: #7cb6ec|window.active.title.bg.border.color: #61aaae|g" themerc

# Inactive Window
sed -i "s|window.inactive.label.text.color: #000000|window.inactive.label.text.color: #fff0d5|g" themerc
sed -i "s|window.inactive.title.bg.border.color: #ffffff|window.inactive.title.bg.border.color: #a6926c|g" themerc
sed -i "s|window.inactive.title.separator.color: #9a8e7c|window.inactive.title.separator.color: #343021|g" themerc
sed -i "s|window.inactive.title.bg.color: #efece6|window.inactive.title.bg.color: #742d17|g" themerc
sed -i "s|window.inactive.title.bg.colorTo: #d9d2c7|window.inactive.title.bg.colorTo: #36150c|g" themerc




# Logout, then back in to make the changes take effect.
#
# Fedora->Leave->Logout





# =============================================================================
# Customize Desktop and Login Backgrounds
# =============================================================================

# The following link might be useful for some purposes, but not for changing
# the background wallpaper.
# https://github.com/lxqt/lxqt-session


# Option 1: Download some forest backgrounds.
#
# I'm going to use these to cycle the background, so you may want to try this.
# -----------------------------------------------------------------------------

su

cd /usr/share/backgrounds

gem_list_files="
https://wallpaperaccess.com/full/732171.jpg
https://wallpaperaccess.com/full/773438.jpg
https://wallpaperaccess.com/full/773426.jpg
https://wallpaperaccess.com/full/773453.jpg
https://wallpaperaccess.com/full/773468.jpg
https://wallpaperaccess.com/full/773544.jpg
https://wallpaperaccess.com/full/84681.jpg
https://wallpaperaccess.com/full/84710.jpg
https://wallpaperaccess.com/full/174804.jpg
https://wallpaperaccess.com/full/174807.jpg
https://wallpaperaccess.com/full/291270.jpg
https://wallpaperaccess.com/full/279735.jpg
"
for file in ${gem_list_files}; do
	wget ${file}
done


# Option 2: Use an image file in /home/$USER/Downloads
# -----------------------------------------------------------------------------
#
# You should be running as root:

su

cd /home/$USER/Downloads

ls

# Assign your file name here.
gem_filename_image=redwood.jpg

cp /home/$USER/Downloads/${gem_filename_image} /usr/share/backgrounds
chown root:root /usr/share/backgrounds/${gem_filename_image}



# Set and Apply the Background:
# -----------------------------
# Try this first:
# Source: https://www.mankier.com/1/pcmanfm-qt

gem_filename_image=redwood.jpg

pcmanfm-qt --set-wallpaper=/usr/share/backgrounds/${gem_filename_image} --wallpaper-mode=stretch



# Optionally cycle the desktop images:
# ------------------------------------
# Right click on the desktop.
#
# Choose Desktop Preferences
#
# Click the middle tab: Slide Show
#
# Check Enable Slide Show.
#
# Verify the following setting- Wallpaper image folder: /usr/share/backgrounds
#
# I prefer to check Randomize the slide show.
#
# Remove the default background:

su

cd /usr/share/backgrounds
rm -f default.png







# =============================================================================
# Change the Login Screen Background
# =============================================================================
# Sources: https://www.systutorials.com/241506/how-to-change-the-display-manager-on-fedora-linux/
#          https://opensource.com/article/16/12/yearbook-best-couple-2016-display-manager-and-window-manager


# Which display manager are we using?  This may help:
#
# ls -l /etc/systemd/system/display-manager.service
#
# Shows:
# lrwxrwxrwx. 1 root root 36 Apr 25 19:21 /etc/systemd/system/display-manager.service -> /usr/lib/systemd/system/sddm.service
#
# We're running Simple Desktop Display Manager (sddm):
# https://en.wikipedia.org/wiki/Simple_Desktop_Display_Manager
#
# Source: https://www.systutorials.com/docs/linux/man/5-sddm.conf/


# Change the theme in /etc/sddm.conf:

su


# Name of the background image in /usr/share/backgrounds
gem_filename_image=redwood.jpg

# Must be owned by root.
chown root:root /usr/share/backgrounds/${gem_filename_image}



# Back up before we modify sddm.conf.
if [[ ! -f /etc/sddm.conf.bak ]]; then
    cp /etc/sddm.conf /etc/sddm.conf.bak
fi

# Tell sddm to use the 02-lxqt-fedora theme.
sed -i "s|#Current=01-breeze-fedora|Current=02-lxqt-fedora|g" /etc/sddm.conf


# Back up before we modify theme.conf.
if [[ ! -f /usr/share/sddm/themes/02-lxqt-fedora/theme.conf.bak ]]; then
    cp /usr/share/sddm/themes/02-lxqt-fedora/theme.conf /usr/share/sddm/themes/02-lxqt-fedora/theme.conf.bak
fi

# Tell 02-lxqt-fedora theme to use our background.
sed -i "s|background=/usr/share/backgrounds/default.png|background=/usr/share/backgrounds/${gem_filename_image}|g" /usr/share/sddm/themes/02-lxqt-fedora/theme.conf






# -----------------------------------------------------------------------------
*FIX: I think the reset of this is not necessary.  Verify and remove.

# Does this change the theme?  I tried it, but it always looked the same.
sddm-greeter --theme /usr/share/sddm/themes/02-lxqt-fedora

# Use the following to try out installed themes:
sddm-greeter --test-mode --theme /usr/share/sddm/themes/02-lxqt-fedora
sddm-greeter --test-mode --theme /usr/share/sddm/themes/elarun
sddm-greeter --test-mode --theme /usr/share/sddm/themes/maldives
sddm-greeter --test-mode --theme /usr/share/sddm/themes/maya
# -----------------------------------------------------------------------------





# =============================================================================
# Change the Bootup Theme (Animation)
# =============================================================================
# Source: https://fedoramagazine.org/howto-change-the-plymouth-theme/
#
# This is completely superfulous, but entertaining and doesn't slow the boot
# process.

su

dnf -y install plymouth-theme-spinfinity
plymouth-set-default-theme spinfinity -R

# Exit back to our user's identity
exit

# Reboot to see the bootup animation:
Fedora->Leave->Reboot




# =============================================================================
# Sudo
# =============================================================================

su

cat > temp << EOF

Defaults:$USER    !authenticate
${USER} ALL=(root) NOPASSWD: /bin/dnf, /bin/mount, /bin/umount, /usr/sbin/reboot, /usr/sbin/shutdown, /bin/systemctl, /bin/rpm, /bin/touch, /bin/cat, /bin/chown, /bin/chmod, /bin/chgrp, /usr/sbin/alternatives, /bin/wget, /bin/sh, /usr/sbin/setenforce

EOF
cat temp >> /etc/sudoers
rm -f temp
cat /etc/sudoers


# Reboot Fedora
# Fedora->Leave->Reboot


# =============================================================================
# Install Packages
# =============================================================================

# FIX: Holding off on these for now:
sudo dnf -y install policycoreutils-gui and system-* xarchiver wine


# System Utilities
# ----------------
# rxvt-unicode is a nicer terminal.
# samba allows us to share files with other computers on our local network.

sudo dnf -y install rxvt-unicode samba
sudo dnf -y groupinstall "Administration Tools"


# Firefox
# -------
sudo dnf -y install firefox


# Google Chrome
# -------------
# Add repositories for Google Chrome.
sudo dnf -y install fedora-workstation-repositories
sudo dnf config-manager --set-enabled google-chrome

sudo dnf -y install google-chrome-stable



# Gimp Image Editor
# -----------------
BEFORE installing gimp, view your application assocations, as described in the
section further below.  Save the three *.list files in /usr/share/applications,
so we can diff them after installing gimp.

gnome-memeapps.list & mimeapps.list are identical.  kde-mimeapps.list doesn't
have any references to gimp.

At first I thought Gimp associated all image types with itself.  However, after
viewing the .list files, it appears they are mapped to eog (Eye of Gnome),
which we have not installed.

Is eog mentioned in the .list files prior to installing gimp?  It seems odd
that by default images are mapped to an application that was not installed, by
default.  Perhaps installing gimp resulted in the image file associations being
mapped to eog, on the assumption that it would be installed along with gimp,
which, of course, is a poor assumption.

Somehow, in the absence of eog, it seems gimp is being used as an alternative,
as it appears images are not be explicitly associated with gimp.  We're going
to try to associate images with LXImage again.

Images are mapped to eog.desktop (Eye of Gnome image viewer), which we have not
installed.  We can install it:

sudo dnf -y install eog

Now images open using eog.  Do we like eog better than LXImage?  If so, then
we're done.  To stick with LXImage, we'll have to diff the 3 files mentioned
above to identify what we'll need to change back to LXImage.  See the file
associations further below to see how to do that.


# Gimp Image Editor
# -----------------
sudo dnf -y install gimp


# VLC Video Player
# ----------------
# Source: https://www.videolan.org/vlc/download-fedora.html
sudo dnf -y install https://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-$(rpm -E %fedora).noarch.rpm
sudo dnf -y install vlc


# C/C++ Development Tools:
# ------------------------
sudo dnf -y install kdiff3 *mercurial* 
sudo dnf -y install swig fping python3-matplotlib cmake cmake-gui llvm clang mingw64-gcc mingw64-gcc-c++ git perl meson
sudo dnf -y groupinstall "Development Tools" "Development Libraries" "X Software Development" "C Development Tools and Libraries"


# npm
# ---
# Node Package Manager
# https://nodejs.org/en/knowledge/getting-started/npm/what-is-npm/

# Assume root identity.
su

sudo dnf -y install npm

# Return to user identity.
exit



# Visual Studo Code
# -----------------
# Source: https://code.visualstudio.com/docs/setup/linux

sudo rpm --import https://packages.microsoft.com/keys/microsoft.asc
sudo sh -c 'echo -e "[code]\nname=Visual Studio Code\nbaseurl=https://packages.microsoft.com/yumrepos/vscode\nenabled=1\ngpgcheck=1\ngpgkey=https://packages.microsoft.com/keys/microsoft.asc" > /etc/yum.repos.d/vscode.repo'
sudo dnf -y check-update
sudo dnf -y install code

# Install the Andromeda color theme, or whatever your favorite theme is. I like
# the Andromeda theme (colorizer variation.)

# *FIX: which icon theme(s) are we using?


# When running the VSCode as root we specify --user-data-dir.  Earlier in this
# install procedure we appended settings to $USER and root's .bashrc file that
# specified to use a separate user data directory for root and $USER.  This is
# to prevent root from stomping on $USER's data directory.
#
# For root, we have set the following alias:

alias code='/usr/bin/code --user-data-dir=/root/.config/Code/'

# For our user, we have set the following alias, using $USER=mhodges:

alias code='/usr/bin/code --user-data-dir=/home/mhodges/.config/Code/'



# Verify that is already used by standard users, and that I'm not creating a directory
# unique to what one guy on the internet was recommending.
#
# /usr/bin/code --user-data-dir=${HOME}/.config/Code/ $@


# ESLint
# ------
# *FIX: Skip for now.  We need to figure out how to not go through making a new
# eslint.js (or whatever it's called) for every project. It seems we can create
# on once, put in in our home directory and have it work for all projects. We
# can install npm just fine, but "eslint --init".  See:
# https://github.com/eslint/eslint/issues/10618
#
# Here's what I had from the first time around.  In /home/$USER/www/eslint, I
# had the following file:

mkdir -p ~/www/eslint/
cat > ~/www/eslint/.eslintrc.json << EOF
{
    "env": {
        "browser": true,
        "es6": true
    },
    "extends": "eslint:recommended",
    "parserOptions": {
        "ecmaVersion": 2018
    },
    "rules": {
        "no-undef": 0,
        "no-unused-vars": 0,
        "indent": 0,
        "no-console": 0,
        "linebreak-style": [
            "error",
            "windows"
        ],
        "quotes": [
            "error",
            "double"
        ],
        "semi": [
            "error",
            "always"
        ]
    }
}
EOF

# It seems like others had luck running "eslint --init" ina temp directory,
# then just copying it to where they would like it.  This seems like a good
# avenue to persue.


# https://eslint.org/
# ESList checks javascript for correctness.

# IMPORTANT! The below steps result in .eslintrc.json being created in /root.
# Maybe we should run as user.  As this file is not accessible from typical
# user accounts, my expectation is that this will not work.  However, eslint
# does run from the command line.


# Must be run as root.
su

npm install eslint -g
exit    # back to user.

eslint --init


? How would you like to configure ESLint? Answer questions about your style
? Which version of ECMAScript do you use? ES2018
? Are you using ES6 modules? No
? Where will your code run? (Press <space> to select, <a> to toggle all, <i> to 
invert selection)Browser
? Do you use CommonJS? No
? Do you use JSX? No
? What style of indentation do you use? Tabs
? What quotes do you use for strings? Double
? What line endings do you use? Windows
? Do you require semicolons? Yes
? What format do you want your config file to be in? JSON
Local ESLint installation not found.
The config that you've selected requires the following dependencies:

eslint@latest
Successfully created .eslintrc.json file in /home/mhodges/www/homepage
ESLint was installed locally. We recommend using this local copy instead of your globally-installed copy.

# It's safe to ignore their recommendation.

# Set up eslint.
# Source: https://code.visualstudio.com/docs/languages/javascript

# In your projects .eslintrc.json add the following rules so it doesn't
# complain about global variables not being defined in the same file.  I think
# this goes just inside of the outer enclosing curly braces.
#
#        "no-undef": 0,
#        "no-unused-vars": 0
#
# 0- disable, 1- warn, 2- error





# wclang for cross compiling for Windows.
# ---------------------------------------
# *FIX: Skipping wclang, for now.

# clang is a tool to cross compile source code easily with
# clang on Linux/Unix for Windows.  Wclang is basically a wrapper for clang,
# which allows you to directly target Windows.  Wclang detects the target and
# headers automatically and adds them to the clang invocation command.  After
# the installation you will have "<mingw-triplet>-clang",
# "<mingw-triplet>-clang++" available as "compiler".

sudo dnf -y copr enable mati865/wclang

# IMPORTANT: The below line is not working as of Fedora 29. Building has
# worked in the past.  Okay! We're all good now.  Installing using dnf works
# fine.
#
# sudo dnf -y install wclang
#
#
# Alternatively, you can build WCLang:
# Source:  https://github.com/tpoechtrager/wclang
#
# Download from repository.
mkdir -p /home/$USER/gem/local/src
cd /home/$USER/gem/local/src
git clone https://github.com/tpoechtrager/wclang.git

# Build it.
cd /home/$USER/gem/local/src/wclang
cmake -DCMAKE_INSTALL_PREFIX=~/gem/local
make
make install



# FTP Server
# ----------
sudo dnf -y install vsftpd


# Web Programming
# ---------------
sudo dnf -y install mariadb mariadb-server php php-common php-pecl-apc php-cli php-pear php-pdo php-pgsql php-pecl-memcache php-pecl-memcached php-gd php-mbstring php-mcrypt php-xml php-devel phpmyadmin



# VNC
# ---
sudo dnf -y install tigervnc-server x11vnc 




# =============================================================================
# Change LXQt Clock Time Display to 12 hour rather than 24 hour
# =============================================================================
#
# *FIX: I think this is set in ~/.config/lxqt/panel.conf.  This is the way we
# want it.  Try adding the customFormat line as shown below.  That, along with
# many other world clock settings are added, after configuring it via the gui.
#
# [worldclock]
# alignment=Right
# autoRotate=true
# customFormat="'<b>'HH:mm:ss'</b><br/><font size=\"-2\">'ddd, d MMM yyyy'<br/>'TT'</font>'"


# Set it manually, for now:
#
# Right click on the clock and select Configure "World clock."  Check Display
# format->Time->Use 12-hour format.




# =============================================================================
# Configure RXVT Terminal
# =============================================================================
# Source: http://www.askapache.com/linux/rxvt-xresources.html
# 
# See if you already have a ~/.Xdefaults file.  The following will append these
# settings to it.


# Back up ~/.Xdefaults before we change it.
if [[ ! -f ~/.Xdefaults.bak ]]; then
	cp ~/.Xdefaults ~/.Xdefaults.bak
fi


cat << EOF >> ~/.Xdefaults

! This messes up the prompt.  Why?
!URxvt*termName: screen-256color
URxvt*loginShell: true

! Change default colors
urxvt*foreground: #aaaaaa
urxvt*background: #101010
! black + red
urxvt*color0:      #000000
urxvt*color1:      #BF0000
! green + yellow
urxvt*color2:      #00BF00
urxvt*color3:      #BFBF00
! blue + magenta
urxvt*color4:      #0000BF
urxvt*color5:      #BF00BF
! cyan + white
urxvt*color6:      #00BFBF
urxvt*color7:      #BFBFBF
! bright-black + bright-red
urxvt*color8:      #404040
urxvt*color9:      #FF4040
! bright-green + bright-yellow
urxvt*color10:     #40FF40
urxvt*color11:     #FFFF40
! bright-blue + bright-magenta
urxvt*color12:     #6060FF
urxvt*color13:     #FF40FF
! bright-cyan + bright-white
urxvt*color14:     #40FFFF
urxvt*color15:     #FFFFFF

! Scrollbar
urxvt*scrollBar: true
urxvt*scrollBar_right: true
URxvt*scrollColor: #777777
URxvt*scrollstyle: plain
URxvt*thickness: 20
URxvt*scrollBar_floating: false
URxvt*scrollTtyKeypress: true
URxvt*scrollTtyOutput: false
URxvt*scrollWithBuffer: true
URxvt*secondaryScreen: true
URxvt*secondaryScroll: true
URxvt*skipScroll: false

! Window
urxvt*borderLess: false
urxvt*fading: 25
urxvt*transparent: false
urxvt*shading: 50
URxvt*saveLines: 65535
URxvt*buffered: true
URxvt*hold: false
URxvt*internalBorder: true

! Geometry and font
urxvt*geometry: 84Ã—24
urxvt*font: xft:Bitstream\ Vera\ Sans\ Mono:style=roman:pixelsize=13
!URxvt*boldFont: -xos4-terminus-bold-*-*-*-14-*-*-*-*-*-iso8859-15,xft:terminus:bold:pixelsize:12
!URxvt*italicFont: xft:Bitstream Vera Sans Mono:italic:autohint=true:pixelsize=12
!URxvt*boldItalicFont: xft:Bitstream Vera Sans Mono:bold:italic:autohint=true:pixelsize=12

URxvt*utmpInhibit: false
URxvt*urgentOnBell: false
URxvt*visualBell: false
URxvt*mapAlert: true
URxvt*mouseWheelScrollPage: true
URxvt*colorUL: yellow
URxvt*underlineColor: yellow
EOF

chmod u+x ~/.Xdefaults
xrdb -load ~/.Xdefaults





# Set the ctrl-alt-t desktop shortcut:
#
# Fedora->Preferences->Shortcut Keys
#
# Scroll down to "Control+Alt+T, QTerminal."  Click "Modify."  Change
# Description: "QTerminal" to Description: "urxvt".  Change Command:
# "qterminal" to Command: "urxvt".  Click "OK"




# =============================================================================
# Add Quick Links to Panel
# =============================================================================
# The panel is like the Windows taskbar at the bottom of the desktop.  We're
# going to modify panel.conf to add shortcuts to the terminal, file manager,
# Google Chrome, and MS VSCode.


gem_fullpath_panel_conf=~/.config/lxqt/panel.conf

# Back up the original panel.conf, if a .bak file doesn't already exist.
if [[ ! -f ${gem_fullpath_panel_conf}.bak ]]; then
    cp -f ${gem_fullpath_panel_conf} ${gem_fullpath_panel_conf}.bak
fi
# To restore:
# cp -f ${gem_fullpath_panel_conf}.bak ${gem_fullpath_panel_conf}.bak

sed ':a;N;$!ba;s|\[quicklaunch]\nalignment=Left|\[quicklaunch]\nalignment=Left\napps\\1\\desktop=/usr/share/applications/rxvt-unicode.desktop\napps\\2\\desktop=/usr/share/applications/pcmanfm-qt.desktop\napps\\3\\desktop=/usr/share/applications/google-chrome.desktop\napps\\4\\desktop=/usr/share/applications/code.desktop\napps\\size=4|g' ${gem_fullpath_panel_conf} > ${gem_fullpath_panel_conf}2.txt
cp ${gem_fullpath_panel_conf}2.txt ${gem_fullpath_panel_conf}

# To reload our modified panel script we're going to logout, then back in.
# Fedora->Leave->Logout

# *FIX: Remove the desktop button to the left.

# *FIX: Change "Leave" to Logout.

# *FIX: Change "Lock Screen" to Logout.




# *FIX: Skip this section.
# =============================================================================
# File Associations
# =============================================================================
# 
# To change file association manually: Fedora->Preferences->File Associations.
# 
# VIEW DEFAULT APPLICATIONS:
# 
# Don't modify the following files by hand, but you can view them.
#
# View a list of all *.desktop files.
# 
# ls /usr/share/applications
# ls /usr/share/applications/*.desktop
# 
# View the *system* default file associations.  They are stored in these .list
# files.
# ls /usr/share/applications/*.list
# 
# Have a look at one of the .list files:
# cat /usr/share/applications/mimeapps.list
# (...or else one shown by the previous command.)
# 
# 
# View *your* file associations.  This almost certainly will not be present, as
# you probably have not yet customized any.
#
# cat ~/.local/share/applications/mimeapps.list
# 
# 
# MODIFY DEFAULT APPLICATION ASSIGNMENTS FROM THE COMMAND LINE:
# 
# xdg-mime interface is how we modify file associations.
# Man page:   http://linux.die.net/man/1/xdg-mime
# 
# Find the mimetype of any file (Will return "text/plain" for text files):
# xdg-mime query filetype <filename>
# 
# The 1st part is your mimetype.  If there is a 2nd part after a semicolon,
# ignore that.  Let's suppose the type is text/plain.
# 
# What application open files of mimetype text/plain?:
# xdg-mime query default text/plain
# 
# To associate text/plain with notepadqq application, verify that you have
# leafpad.desktop in the /usr/share/applications folder.
# su
# cd /usr/share/applications
# ls
# 
# May give an error, but still work.  See below.

exit    # Run as user mhodges.
xdg-mime default notepadqq.desktop text/plain

su	# Now do the same for root.

xdg-mime default notepadqq.desktop text/plain
exit

# FOLLOWING ERROR MAY BE IGNORED:
# touch: cannot touch â€˜/root/.local/share/applications/mimeapps.listâ€™: No such file or directory
# /usr/bin/xdg-mime: line 827: /root/.local/share/applications/mimeapps.list.new: No such file or directory
# 
# You may want to re-open this document by double-clicking on the icon on the
# desktop, just to verify that the correct association has successfully been
# established.






# =============================================================================
# Remove Unwanted Applications and Directories
# =============================================================================

# *FIX: At some point, on the right side of the panel/taskbar, we lost the icon
# and executable for dnfdragora-updater.  Do we have that now, before?  When
# did we lose that?  That was unintended.


rm -rf ~/Music ~/Public ~/Templates


sudo dnf remove -y qterminal falkon xterm transmission-qt lxqt-about enki qct

# These are links to our installed applications.
ls /usr/share/applications/*.desktop



# What is this?  It's under programming.
# /usr/share/applications/qct.desktop




# *FIX: Skip, for now.  Needs to be updated for Fedora 30.
# =============================================================================
# Autostart
# =============================================================================
# Set up apps to start automatically upon login.  The autostart desktop file
# gets run upon login.  It calls the ~/gem/local/sbin/gem_autostart script that
# launches the apps.

mkdir -p ~/.config/autostart

cat > ~/.config/autostart/gem_autostart.desktop << EOF
[Desktop Entry]
Name=gem_autostart
Exec=/home/mhodges/gem/local/sbin/gem_autostart
Terminal=true
Type=Application
EOF

# The following file should already be present as a part of the gem codebase.
cat > ~/gem/local/sbin/gem_autostart << EOF
sleep 5	# Give other start up processes a chance to do their thing.
pcmanfm &
urxvt &
#"/usr/share/code/code --unity-launch" &
"/usr/share/code/code" &
"/usr/bin/google-chrome-stable" &
EOF







# =============================================================================
# Install Audio & Video Codecs
# =============================================================================

# NOTE: Starting in Fedora 27 running easylife produced errors.  Installing
# the below packages fixed this.
#
# https://rpmfusion.org/Configuration


# *FIX: This has only been tested piece meal.  Remove this warning, once you've
# verified that this works fine.

# *FIX: Your easiest path through here is to jump to "Install it:" below.


FEDORA_VERSION=30

FREE_RPM_FILENAME=rpmfusion-free-release-${FEDORA_VERSION}.noarch.rpm
NONFREE_RPM_FILENAME=rpmfusion-nonfree-release-${FEDORA_VERSION}.noarch.rpm
cd ~/Downloads
wget https://download1.rpmfusion.org/free/fedora/${FREE_RPM_FILENAME}
# Install
sudo rpm -ivh ${FREE_RPM_FILENAME}
# Update
sudo rpm -Uvh ${FREE_RPM_FILENAME}
wget https://download1.rpmfusion.org/nonfree/fedora/${NONFREE_RPM_FILENAME}
# Install
sudo rpm -ivh ${NONFREE_RPM_FILENAME}
# Update
sudo rpm -Uvh ${NONFREE_RPM_FILENAME}




# Install it:

# Download easylife:
# http://sourceforge.net/projects/easylife-linux/

su
cd /home/$USER/Downloads

# The easylife directions suggest that you update and reboot before running
# easylife.

# It looks like we now have to download some dependencies:
sudo dnf -y install usermode-gtk yad

rpm -Uvh /home/$USER/Downloads/easylife-*.rpm

# Run it.
easylife

# Clean up.
rm /home/mhodges/Downloads/easylife-?.?-?.noarch.rpm






# =============================================================================
# Install & Configure Oracle Java
# =============================================================================

# Download the JDK from here:
http://www.oracle.com/technetwork/java/javase/downloads/index.html


su

# Update the file name version accordingly:

gem_fullpath_rpm=/home/$USER/Downloads/jdk-13_linux-x64_bin.rpm


# Install:
sudo rpm -ivh ${gem_fullpath_rpm}

# Update:
sudo rpm -Uvh ${gem_fullpath_rpm}





# Setup Alternatives:
# -------------------------------------
sudo alternatives --install /usr/bin/java java /usr/java/latest/jre/bin/java 200000
sudo alternatives --install /usr/bin/javaws javaws /usr/java/latest/jre/bin/javaws 200000
sudo alternatives --install /usr/lib64/mozilla/plugins/libjavaplugin.so libjavaplugin.so.x86_64 /usr/java/latest/jre/lib/amd64/libnpjp2.so 200000
sudo alternatives --install /usr/bin/javac javac /usr/java/latest/bin/javac 200000
sudo alternatives --install /usr/bin/jar jar /usr/java/latest/bin/jar 200000



# Choose Alternatives.  Switch from default to /usr/java/jdk-13/bin/javac.
# EXECUTE EACH OF THE FOLLOWING, ONE AT A TIME:

sudo alternatives --config java
sudo alternatives --config javaws
sudo alternatives --config libjavaplugin.so.x86_64
sudo alternatives --config javac
sudo alternatives --config jar







# =============================================================================
# Configure Git Revision Control
# =============================================================================
# Quick reference to commands can be found here:
# https://fedoraproject.org/wiki/Git_quick_reference
#
# Many beginner references exist:
# https://guides.github.com/
# https://guides.github.com/introduction/git-handbook/


# Setup your global git settings:
#
# NOTE: These operations configure your installed git application.  They do not
# directly affect any specific repository.  Set gem_user_name and gem_user_email
# below as appropriate for your user.

gem_user_name="First Last"
gem_user_email="your@email.address"

git config --global user.name "${gem_username}"
git config --global user.email "${gem_user_email}"
git config --global color.ui auto

# Should you wish to change your details later on, you can manually edit
# the ~/.gitconfig file for global settings, or edit .git/config to change
# settings on a particular repo. Most simply, you can run the above commands
# again with new details.






# =============================================================================
# Download Gem
# =============================================================================

# By default, gem will be installed in your home directory under ~/gem.  If
# you'd like to change it, modify gem_fullpath_gem below.  However, portions of
# these instructions, in their current state, may not work if gem is installed
# elsewhere.

gem_fullpath_gem_parent=/home/$USER

cd ${gem_fullpath_gem_parent}

git clone https://github.com/MarkFiveThousand/gem.git


# NOTE: The clone operation will fail if you already have a gem directory.  If
# you do, you'll either need to rename your existing gem directory, or perform
# a "git pull" from within your gem directory to update it from github.





# =============================================================================
# Appendix A: Repositories
# =============================================================================
# A repository, or repo, is a web server hosting software packages. In addition
# to the repos hosted by Fedora, others are hosted by third parties sharing
# their own packages.


# =============================================================================
# Appendix B: Groups
# =============================================================================
# A group is a collection of related packages.  To see the list of
# available groups:

sudo dnf group list

# ... will produce output similar to:

Last metadata expiration check: 0:53:01 ago on Sat 21 Sep 2019 08:42:56 AM PDT.
Available Environment Groups:
   Fedora Custom Operating System
   Minimal Install
   Fedora Server Edition
   Fedora Workstation
   Fedora Cloud Server
   KDE Plasma Workspaces
   Xfce Desktop
   LXDE Desktop
   LXQt Desktop
   Cinnamon Desktop
   MATE Desktop
   Sugar Desktop Environment
   Development and Creative Workstation
   Web Server
   Infrastructure Server
   Basic Desktop
Installed Groups:
   C Development Tools and Libraries
   Development Tools
   Fonts
   Hardware Support
Available Groups:
   3D Printing
   Administration Tools
   Ansible node
   Audio Production
   Authoring and Publishing
   Books and Guides
   Cloud Infrastructure
   Cloud Management Tools
   Compiz
   Container Management
   D Development Tools and Libraries
   Design Suite
   Domain Membership
   Fedora Eclipse
   Editors
   Educational Software
   Electronic Lab
   Engineering and Scientific
   FreeIPA Server
   Headless Management
   LibreOffice
   MATE Applications
   Medical Applications
   Milkymist
   Network Servers
   Office/Productivity
   Python Classroom
   Python Science
   Robotics
   RPM Development Tools
   Security Lab
   Text-based Internet
   Window Managers
   GNOME Desktop Environment
   Graphical Internet
   KDE (K Desktop Environment)
   Games and Entertainment
   Sound and Video
   System Tools



# =============================================================================
# Appendix C: Firewall Notes
# =============================================================================
# NOTE: These operations can also be performed for the services app in the
# Administration system menu. Enable & disable are permanent.  Start & stop are
# temporary.

# Disable firewalld:
# ------------------
systemctl disable firewalld
systemctl stop firewalld


# Enable firewalld:
# -----------------
systemctl enable firewalld
systemctl start firewalld


# Check if firewalld is running:
# ------------------------------
systemctl status firewalld



# =============================================================================
# Appendix D: SELinux Notes
# =============================================================================
# Source: https://docs.fedoraproject.org/en-US/Fedora/13/html/Security-Enhanced_Linux/sect-Security-Enhanced_Linux-Working_with_SELinux-Enabling_and_Disabling_SELinux.html
#
# NOTE:
# When systems run with SELinux in permissive or disabled mode, users have
# permission to label files incorrectly. Also, files created while SELinux is
# disabled are not labeled. This causes problems when changing to enforcing
# mode. To prevent incorrectly labeled and unlabeled files from causing
# problems, file systems are automatically relabeled when changing from
# disabled mode to permissive or enforcing mode. 


# View the current SELinus label for a given directory:
# ----------------------------------------------------
ls -ldZ /path/to/directory


# Check if selinux is enabled:
# ----------------------------
/usr/sbin/getenforce


# Enable selinux:
# ---------------
/usr/sbin/setenforce 1


# Disable selinux:
# ----------------
/usr/sbin/setenforce 0


# =============================================================================
# Appendix E: Back Up Files
# =============================================================================
#
# In addition to your home directory, below are some directories and files you
# may want to consider backing up.  Which are relavent depends on which
# packages you have installed, configured, and use.
#
# Back up the MySQL (mariadb) databases.  The mysqldump command can be used to
# export a database to a MySql script text file.  The script can later be fed
# back into MySql to restore the databases.  See the gem_archive scripts for
# usage examples.
# 
# Samba configuration file:
#
# * /etc/samba/smb.conf
#
# Web development configuration files:
#
# * /etc/php.ini
# * /etc/httpd/conf/httpd.conf
# * /var/www/html/
# * /var/www/ftp/


# =============================================================================
# Appendix F: Creating a Disk Partion
# =============================================================================
#
# Source: https://docs.fedoraproject.org/en-US/quick-docs/creating-a-disk-partition-in-linux/

# List your partitions:

parted -l

# ... shows my 2TB drive as:

Disk /dev/sdb: 2000GB

# Create one large partition on /dev/sdb:

parted -a optimal /dev/sdb mklabel

... (parted) mklabel                                                          
... New disk label type? gpt                                                  
Warning: The existing disk label on /dev/sdh will be destroyed and all data on this disk will be lost. Do you
want to continue?
Yes/No? yes
(parted) mkpart primary ext4 0% 100% << as the folks in this thread suggested

mkfs.ext4 /dev/sdh1
/dev/sdh1 alignment is offset by 512 bytes.
This may result in very poor performance, (re)-partitioning suggested.


# =============================================================================
# Appendix G: Disk Usage Notes
# =============================================================================
#
# After a fresh install of Fedora, update and installation of Guest Additions
# disk usage is as follows:
#
# Filesystem              1K-blocks       Used Available Use% Mounted on
# devtmpfs                  4066036          0   4066036   0% /dev
# tmpfs                     4082468        184   4082284   1% /dev/shm
# tmpfs                     4082468       1012   4081456   1% /run
# tmpfs                     4082468          0   4082468   0% /sys/fs/cgroup
# /dev/mapper/fedora-root  20511312    4834800  14611552  25% /
# tmpfs                     4082468          8   4082460   1% /tmp
# /dev/sda1                  999320     189500    741008  21% /boot
# /dev/mapper/fedora-home 278735876      75584 264431608   1% /home
# tmpfs                      816492         12    816480   1% /run/user/1000
# -----------------------------------------------------------------------------
# TOTAL:                321,458,908  5,101,100

# After installing:
#
# sudo dnf -y install google-chrome-stable rxvt-unicode samba gimp
#
# Filesystem              1K-blocks    Used Available Use% Mounted on
# devtmpfs                  4066036       0   4066036   0% /dev
# tmpfs                     4082468   20376   4062092   1% /dev/shm
# tmpfs                     4082468    1016   4081452   1% /run
# tmpfs                     4082468       0   4082468   0% /sys/fs/cgroup
# /dev/mapper/fedora-root  20511312 5559304  13887048  29% /
# tmpfs                     4082468       8   4082460   1% /tmp
# /dev/sda1                  999320  189500    741008  21% /boot
# /dev/mapper/fedora-home 278735876  137848 264369344   1% /home
# tmpfs                      816492      12    816480   1% /run/user/1000

# After installing:
#
# sudo dnf -y install https://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-$(rpm -E %fedora).noarch.rpm
# sudo dnf -y install vlc
#
# Filesystem              1K-blocks    Used Available Use% Mounted on
# devtmpfs                  4066036       0   4066036   0% /dev
# tmpfs                     4082468   10292   4072176   1% /dev/shm
# tmpfs                     4082468    1016   4081452   1% /run
# tmpfs                     4082468       0   4082468   0% /sys/fs/cgroup
# /dev/mapper/fedora-root  20511312 6027448  13418904  31% /
# tmpfs                     4082468       8   4082460   1% /tmp
# /dev/sda1                  999320  189500    741008  21% /boot
# /dev/mapper/fedora-home 278735876  139656 264367536   1% /home
# tmpfs                      816492      12    816480   1% /run/user/1000

# After installing:
#
# sudo dnf -y install kdiff3 *mercurial* 
# sudo dnf -y install swig fping python3-matplotlib cmake cmake-gui llvm clang mingw64-gcc mingw64-gcc-c++ git perl meson
# sudo dnf -y groupinstall "Development Tools" "Development Libraries" "X Software Development" "C Development Tools and Libraries"
#
# Filesystem              1K-blocks    Used Available Use% Mounted on
# devtmpfs                  4066036       0   4066036   0% /dev
# tmpfs                     4082468   55636   4026832   2% /dev/shm
# tmpfs                     4082468    1020   4081448   1% /run
# tmpfs                     4082468       0   4082468   0% /sys/fs/cgroup
# /dev/mapper/fedora-root  20511312 7256556  12189796  38% /
# tmpfs                     4082468       8   4082460   1% /tmp
# /dev/sda1                  999320  189500    741008  21% /boot
# /dev/mapper/fedora-home 278735876  175876 264331316   1% /home
# tmpfs                      816492      12    816480   1% /run/user/1000

# After installing:
#
# sudo dnf -y groupinstall "Administration Tools"
#
# Filesystem              1K-blocks    Used Available Use% Mounted on
# devtmpfs                  4066036       0   4066036   0% /dev
# tmpfs                     4082468   57748   4024720   2% /dev/shm
# tmpfs                     4082468    1012   4081456   1% /run
# tmpfs                     4082468       0   4082468   0% /sys/fs/cgroup
# /dev/mapper/fedora-root  20511312 7293316  12153036  38% /
# tmpfs                     4082468       8   4082460   1% /tmp
# /dev/sda1                  999320  189500    741008  21% /boot
# /dev/mapper/fedora-home 278735876  189096 264318096   1% /home
# tmpfs                      816492      12    816480   1% /run/user/1000

# After installing:
#
# sudo dnf -y install mariadb mariadb-server php php-common php-pecl-apc php-cli php-pear php-pdo php-pgsql php-pecl-memcache php-pecl-memcached php-gd php-mbstring php-mcrypt php-xml php-devel phpmyadmin
#
# Filesystem              1K-blocks    Used Available Use% Mounted on
# devtmpfs                  4066036       0   4066036   0% /dev
# tmpfs                     4082468  124032   3958436   4% /dev/shm
# tmpfs                     4082468    1012   4081456   1% /run
# tmpfs                     4082468       0   4082468   0% /sys/fs/cgroup
# /dev/mapper/fedora-root  20511312 7608352  11838000  40% /
# tmpfs                     4082468       8   4082460   1% /tmp
# /dev/sda1                  999320  189500    741008  21% /boot
# /dev/mapper/fedora-home 278735876  197528 264309664   1% /home
# tmpfs                      816492      12    816480   1% /run/user/1000



# =============================================================================
# Appendix H: Group List- Last Updated on Fedora 30, 2019/09/25
# =============================================================================
Available Environment Groups:
   Fedora Custom Operating System
   Minimal Install
   Fedora Server Edition
   Fedora Workstation
   Fedora Cloud Server
   KDE Plasma Workspaces
   Xfce Desktop
   LXDE Desktop
   LXQt Desktop
   Cinnamon Desktop
   MATE Desktop
   Sugar Desktop Environment
   Deepin Desktop
   Development and Creative Workstation
   Web Server
   Infrastructure Server
   Basic Desktop
Available Groups:
   Neuron Modelling Simulators
   3D Printing
   Administration Tools
   Audio Production
   Authoring and Publishing
   Books and Guides
   C Development Tools and Libraries
   Cloud Infrastructure
   Cloud Management Tools
   Compiz
   Container Management
   D Development Tools and Libraries
   Design Suite
   Development Tools
   Domain Membership
   Fedora Eclipse
   Editors
   Educational Software
   Electronic Lab
   Engineering and Scientific
   FreeIPA Server
   Games and Entertainment
   Headless Management
   LibreOffice
   MATE Applications
   Medical Applications
   Milkymist
   Network Servers
   Office/Productivity
   Python Classroom
   Python Science
   Robotics
   RPM Development Tools
   Security Lab
   Sound and Video
   System Tools
   Text-based Internet
   Window Managers

