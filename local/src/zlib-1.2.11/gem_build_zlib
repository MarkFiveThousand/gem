#!/bin/bash
#  ___________                           __________
# /\   _______\                         /\   ______\
# \ \  \______/_     ___   ____ ____ ___\ \  \_____/_     ___   ___ ___  ______    ___    ___
#  \ \  \ /\__  \  /'___`\/\   V    V   \\ \_______  \  /'   `\/\  \\  \/\   __\/' ._`\ /'___`\
#   \ \  \\/__\  \/\  ___/\ \  \/\  \/\  \\/_______\  \/\  \\  \ \  \\  \ \  \ /\  \__//\  ___/
#    \ \__________\ \____\ \ \__\ \__\ \__\ /\_________\ \_____/\ \______\ \__\\ \____/\ \____\
#     \/__________/\/____/  \/__/\/__/\/__/ \/_________/\/____/  \/______/\/__/ \/___/  \/____/


. gem_script
. gem_build

function gem_v_SetDefaults
{
	gem_build_SetDefaults;

	gem_c_standard="-std=gnu11"	# c90, c99, c11, gnu90, gnu99, gnu11

	gem_build_script="cmake"
#	gem_build_script="autotools"
#	gem_build_script="meson"

	# Common Defaults
	if [[ ${gem_os} == "MINGW64"* ]]; then	# MinGW shell on Windows.
		gem_host=mingw
#		gem_host=msvc
	elif [[ ${gem_os} == "CYGWIN"* ]]; then		# Cygwin shell on Windows.
		gem_host=cygwin
#		gem_host=mingw
	elif [[ ${gem_os} == "Linux"* ]]; then	# Linux shell.
		gem_host=linux
#		gem_host=mingw
#		gem_host=android_arm64_v8a
	fi

	gem_build_type=release
#	gem_build_type=debug
#	gem_build_type=relwithdebinfo

	gem_lib_type=shared
#	gem_lib_type=static

	# The package url must be in the following format:
	# <url parent>/<package name>-<version>.tar.<extension>
	gem_filename_url=http://www.zlib.net/zlib-1.2.11.tar.gz

	# Set build flags.
	gem_flags_configure="${gem_flags_configure}"
	gem_flags_c="${gem_flags_c}"
	gem_flags_cpp="${gem_flags_cpp}"
	gem_flags_cxx="${gem_flags_cxx}"
	gem_flags_ld="${gem_flags_ld}"
	gem_flags_common="${gem_flags_common}"
}

function gem_v_DownloadSource
{
	gem_build_DownloadSource
}

function gem_v_OnConfigure
{
	gem_v_DebugDumpVars

	if [[ ${gem_host} == "cygwin" ]]; then

		# Don't define WIDECHAR for Cygwin.
		sed -i 's/defined(_WIN32) || defined(__CYGWIN__)/defined(_WIN32)/g' ${gem_fullpath_src}/gzguts.h

		# It would be preferable to tell cmake to define GCC_WINDRES for the
		# resource compiler, but I haven't had any luck at that, so we'll just
		# edit the resource file instead.
		sed -i ':a;N;$!ba;s|#ifdef GCC_WINDRES\nVS_VERSION_INFO		VERSIONINFO\n#else\nVS_VERSION_INFO		VERSIONINFO	MOVEABLE IMPURE LOADONCALL DISCARDABLE\n#endif|VS_VERSION_INFO		VERSIONINFO|g'  ${gem_fullpath_src}/win32/zlib1.rc
	fi

	if [[ ${gem_lib_type} == "shared" ]]; then
		gem_cmake_params_extra=" \
-DBUILD_SHARED_LIBS=ON \
${gem_cmake_params_extra}"
	fi

	gem_build_OnConfigure
}

function gem_v_build_OnCommandLine_Build
{
	gem_build_OnCommandLine_Build
}

function gem_v_OnBuild
{
	gem_v_DebugDumpVars
	gem_build_OnBuild
}

function gem_v_OnInstall
{
	gem_build_OnInstall
}

function gem_v_OnUninstall
{
	# gem_build_OnUninstall
	if [[ ${gem_host} == "linux" ]]; then

		gem_script_rm -f ${gem_fullpath_install}/lib/libz.a
		gem_script_rm -f ${gem_fullpath_install}/lib/libz.so
		gem_script_rm -f ${gem_fullpath_install}/lib/libz.so.1
		gem_script_rm -f ${gem_fullpath_install}/lib/libz.so.1.2.11

	elif [[ ${gem_host} == *"android"* ]]; then

		gem_script_rm -f ${gem_fullpath_install}/lib/libz.a
		gem_script_rm -f ${gem_fullpath_install}/lib/libz.so

	elif [[ ${gem_host} == "mingw" ]]; then

		gem_script_rm -f ${gem_fullpath_install}/bin/libzlib.dll
		gem_script_rm -f ${gem_fullpath_install}/bin/libzlib1.dll
		gem_script_rm -f ${gem_fullpath_install}/lib/libzlib.dll.a
		gem_script_rm -f ${gem_fullpath_install}/lib/libzlibstatic.a

	elif [[ ${gem_host} == "cygwin" ]]; then

		gem_script_rm -f ${gem_fullpath_install}/bin/cygz-1.dll
		gem_script_rm -f ${gem_fullpath_install}/lib/libz.a
		gem_script_rm -f ${gem_fullpath_install}/lib/libz.dll.a
	fi

	gem_script_rm -f ${gem_fullpath_install}/include/zconf.h
	gem_script_rm -f ${gem_fullpath_install}/include/zlib.h
	gem_script_rm -f ${gem_fullpath_install}/share/man/man3/zlib.3
	gem_script_rm -f ${gem_fullpath_install}/share/pkgconfig/zlib.pc

	gem_script_rmdir_IfEmpty ${gem_fullpath_install}/bin
	gem_script_rmdir_IfEmpty ${gem_fullpath_install}/include
	gem_script_rmdir_IfEmpty ${gem_fullpath_install}/lib
	gem_script_rmdir_IfEmpty ${gem_fullpath_install}/share/man/man3
	gem_script_rmdir_IfEmpty ${gem_fullpath_install}/share/man
	gem_script_rmdir_IfEmpty ${gem_fullpath_install}/share/pkgconfig
	gem_script_rmdir_IfEmpty ${gem_fullpath_install}/share
}

function gem_v_OnClean
{
	gem_v_DebugDumpVars
	gem_build_OnClean
}

# =============================================================================
#                                       gem_Main
# =============================================================================
function gem_v_OnArg
{
	arg=$(echo ${1} | tr '[A-Z]' '[a-z]')	# Lowercase args.
	case ${arg} in
		*)	gem_build_OnArg "$@" ; return $?
	esac
}

function gem_v_Main
{
	gem_build_Main "$@"
}
gem_v_Main $@
